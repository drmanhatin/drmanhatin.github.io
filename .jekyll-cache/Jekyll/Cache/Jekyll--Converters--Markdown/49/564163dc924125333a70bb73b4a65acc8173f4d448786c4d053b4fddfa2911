I""%<h1 id="azure-customvision-realtime-recognition-demo">Azure CustomVision Realtime Recognition demo</h1>

<p>For a customer I was tasked to demonstrate the capabilities of <a href="https://customvision.ai">Azure’s CustomVision platform</a>. To help truly envision what the CustomVision platform can do, I proposed we should try to make the demonstration happen in ‘real time’. Real time in this case means drawing the labels over the recognized objects within the timespan of seconds. In this blog post, I will demonstrate how simple it is to teach a CustomVision model to recognize different chess pieces.</p>

<p>If you follow this tutorial from front to back, you can expect to have a working model within a few hours.</p>

<h3 id="this-is-the-end-result">This is the end result</h3>
<div style="max-width: 100%">
<iframe width="560" height="560" style="max-width: 100%" src="https://www.youtube.com/embed/t0P6LBDkSlc" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>
</div>

<p>As you can see in the video above, which I took using my phone, the CustomVision model can recognize most chess pieces easily. It does have some trouble with recognizing the differences between a pawn and a rook, which is understandable. These pieces are pretty similar, and I’ve only fed the model about 100 photo’s yet.</p>

<p>On a technical level, what happens in this video is this:</p>

<ol>
  <li>The phone takes a picture, using my <a href="https://github.com/drmanhatin/CustomVisionRealTime">CustomVision RealTime toolkit</a>. This toolkit is run in the browser, <strong>so no app required!</strong></li>
  <li>The picture is compressed on the phone, to save bandwidth, speed up the upload, and to ensure that the video does not exceed 4MB (max size for labeling in CustomVision)</li>
  <li>The picture is sent to the CustomVision API</li>
  <li>CustomVision returns the labels and the coordinates of where it has detected these labels</li>
  <li>The labels are drawn over the camera screen in the browser</li>
</ol>

<p>This process typically takes between 1 to 2 seconds per picture, depending on the network speed, device speed and the size of the picture.</p>

<h3 id="how-to-teach-customvision-to-recognize-different-chess-pieces">How to teach CustomVision to recognize different chess pieces</h3>

<p>This is actually VERY simple and doesn’t require ANY knowledge of programming or machine learning. First, create an account on Azure CustomVision if you don’t have one yet. Then, create a project, select “Object Detection” and “General” domain.</p>

<p>Next step is to take pictures of your chess pieces. In order to be as efficient as possible, take pictures keeping the following things in mind:</p>

<ul>
  <li>Take photos from many different angles</li>
  <li>Take photos in consistent lighting (e.g. if you need to recognize the chess pieces in daytime light, feed the CustomVision model images of chess pieces in daytime light)</li>
  <li>Label photos accurately, draw the bounding boxes as close to the pieces as possible</li>
</ul>

<p>then you can label multiple chess pieces at the same time and at different angles. As such:</p>

<figure> 
        <img src="/assets/images/chess-1.png" />
        <figcaption> Multiple chess pieces labeled in the same picture.</figcaption>
</figure>

<p>A minimum of 15 images per “tag” (type of object, in this case a rook, bishop, pawn, queen, king or knight) is required. Typically, more images will lead to a better result. After taking the pictures, it’s time to upload them to CustomVision. Go to the “Training Images” tab and click “Add Images”. Upload all your images. Now for each image, tag the images with the right labels.</p>
<figure> 
        <img src="/assets/images/pawn.png" />
        <figcaption>A pawn</figcaption>
</figure>

<p>Once you have labeled all your pictures, click “train” in the top right corner of the CustomVision portal and select “Quick Training”. After a few minutes, the training will finish. In the “Performance” tab of the portal, you can see how the model has performed. If you want to test the model “in realtime”, click “Publish”. Then, click on the “Prediction URL” button. Here you can find the URL + key, which you will require in the next step.</p>

<p>In the “Performance” tab I have selected a probability threshold of 70%, this means that if the label is less than 70% certain, it won’t count as a good result. I have also selected an overlap threshold of 50%, which means that the detected label bounding box should overlap at least 50% with the bounding box you have created in the portal, else it will not count as a good result either. After about 160 images and 24 hours of training, this is the result:
<img src="/assets/images/prediction.png" alt="prediction stats" /></p>

<p>If you have obtained your key and url, go to the <a href="https://customvision.victorsanner.nl">CustomVision Toolbox</a> on your phone. Now enter the URL + Key. Point your phone at a few chess pieces and see how your model performs!</p>

<style>
#share-buttons {display: inline-block; vertical-align: middle; }
#share-buttons:after {content: ""; display: block; clear: both;}
#share-buttons > div {
    position: relative;
    text-align: left; 
    height: 36px; 
    width: 32px; 
    float: left; 
    text-align: center;
}
#share-buttons > div > svg {height: 16px; fill: #d5d5d5; margin-top: 10px;}
#share-buttons > div:hover {cursor: pointer;}
#share-buttons > div.facebook:hover > svg {fill: #3B5998;}
#share-buttons > div.twitter:hover > svg {fill: #55ACEE;}
#share-buttons > div.linkedin:hover > svg {fill: #0077b5;}
#share-buttons > div.pinterest:hover > svg {fill: #CB2027;}
#share-buttons > div.gplus:hover > svg {fill: #dd4b39;}
#share-buttons > div.mail:hover > svg {fill: #7D7D7D;}
#share-buttons > div.instagram:hover > svg {fill: #C73B92;}
#share-buttons > div.facebook > svg {height: 18px; margin-top: 9px;}
#share-buttons > div.twitter > svg {height: 20px; margin-top: 8px;}
#share-buttons > div.linkedin > svg {height: 19px; margin-top: 7px;}
#share-buttons > div.pinterest > svg {height: 20px; margin-top: 9px;}
#share-buttons > div.gplus > svg {height: 17px; margin-top: 9px; position: relative; left: 1px;}
#share-buttons > div.mail > svg {height: 14px; margin-top: 11px;}
</style>

<p><span style="color: silver;">Share on: </span>&lt;div id="share-buttons"&gt;</p>
<div class="facebook" title="Share this on Facebook" onclick="window.open('http://www.facebook.com/share.php?u=/azure/customvision/2020/12/15/customvision-demo.html');"><svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759h-306v-759h-255v-296h255v-218q0-186 104-288.5t277-102.5q147 0 228 12z" /></svg></div>
<div class="twitter" title="Share this on Twitter" onclick="window.open('http://twitter.com/home?status=/azure/customvision/2020/12/15/customvision-demo.html');"><svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1684 408q-67 98-162 167 1 14 1 42 0 130-38 259.5t-115.5 248.5-184.5 210.5-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5t-114-159.5q33 5 61 5 43 0 85-11-112-23-185.5-111.5t-73.5-205.5v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5t371.5 99.5q-8-38-8-74 0-134 94.5-228.5t228.5-94.5q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z" /></svg></div>
<div class="linkedin" title="Share this on Linkedin" onclick="window.open('https://www.linkedin.com/shareArticle?mini=true&amp;url=/azure/customvision/2020/12/15/customvision-demo.html&amp;title=&amp;summary=&amp;source=');"><svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M477 625v991h-330v-991h330zm21-306q1 73-50.5 122t-135.5 49h-2q-82 0-132-49t-50-122q0-74 51.5-122.5t134.5-48.5 133 48.5 51 122.5zm1166 729v568h-329v-530q0-105-40.5-164.5t-126.5-59.5q-63 0-105.5 34.5t-63.5 85.5q-11 30-11 81v553h-329q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5 114.5-15.5q171 0 275 113.5t104 332.5z" /></svg></div>

<div class="gplus" title="Share this on Google Plus" onclick="window.open('https://plus.google.com/share?url=/azure/customvision/2020/12/15/customvision-demo.html');"><svg viewBox="0 0 2304 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1437 913q0 208-87 370.5t-248 254-369 91.5q-149 0-285-58t-234-156-156-234-58-285 58-285 156-234 234-156 285-58q286 0 491 192l-199 191q-117-113-292-113-123 0-227.5 62t-165.5 168.5-61 232.5 61 232.5 165.5 168.5 227.5 62q83 0 152.5-23t114.5-57.5 78.5-78.5 49-83 21.5-74h-416v-252h692q12 63 12 122zm867-122v210h-209v209h-210v-209h-209v-210h209v-209h210v209h209z" /></svg></div>
<div class="mail" title="Share this through Email" onclick="window.open('mailto:?&amp;body=/azure/customvision/2020/12/15/customvision-demo.html');"><svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"><path d="M1792 710v794q0 66-47 113t-113 47h-1472q-66 0-113-47t-47-113v-794q44 49 101 87 362 246 497 345 57 42 92.5 65.5t94.5 48 110 24.5h2q51 0 110-24.5t94.5-48 92.5-65.5q170-123 498-345 57-39 100-87zm0-294q0 79-49 151t-122 123q-376 261-468 325-10 7-42.5 30.5t-54 38-52 32.5-57.5 27-50 9h-2q-23 0-50-9t-57.5-27-52-32.5-54-38-42.5-30.5q-91-64-262-182.5t-205-142.5q-62-42-117-115.5t-55-136.5q0-78 41.5-130t118.5-52h1472q65 0 112.5 47t47.5 113z" /></svg></div>
<p>&lt;/div&gt;</p>

:ET